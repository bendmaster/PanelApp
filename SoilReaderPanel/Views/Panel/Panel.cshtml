@model IEnumerable<SoilReaderPanel.Models.DeviceViewModel>

@{
    ViewData["Title"] = "Panel";
}

<h1>Panel</h1>

<p>
    <a asp-action="AddDevice">AddDevice</a>
</p>
<div class="container">
<div class="row">

@foreach (var item in Model) {
    <div class="col-md-4 mb-4 p-4 card border-info">
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: @((int)((double.Parse(item.Reading) / 3200.0) * 100))%"></div>
        </div>
        <div>
            <img class="img-fluid" src=@Html.DisplayFor(modelItem => item.ImageLocation) />
        </div>
        <div>
            <b>@Html.DisplayNameFor(modelItem => item.DeviceID): </b>
            @Html.DisplayFor(modelItem => item.DeviceID)
        </div>
        <div>
            <b>@Html.DisplayNameFor(modelItem => item.DeviceName): </b>
            @Html.DisplayFor(modelItem => item.DeviceName)
        </div>
        <div>
            <b>@Html.DisplayNameFor(modelItem => item.ParticleDeviceID): </b>
            @Html.DisplayFor(modelItem => item.ParticleDeviceID)
        </div>
        <div>
            <b>@Html.DisplayNameFor(modelItem => item.Reading): </b>
            @Html.DisplayFor(modelItem => item.Reading)
        </div>
        <span hidden>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </span>
    </div>
}
</div>
    </div>
